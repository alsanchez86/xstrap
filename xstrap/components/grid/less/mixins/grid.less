// Grid system
// Generate semantic grid columns with these mixins.

// Centered container element
.container-fixed (@gutter: @grid-gutter-width) {

  margin-right: auto;
  margin-left: auto;
  padding-left:  (@gutter / 2);
  padding-right: (@gutter / 2);

  &:extend(.clearfix all);
}

// Creates a wrapper for a series of columns
.make-row (@gutter: @grid-gutter-width) {

  margin-left: ceil((@gutter / -2));
  margin-right: floor((@gutter / -2));

  &:extend(.clearfix all);
}

// XS
.make-xs-column (@columns; @gutter: @grid-gutter-width) {

  position: relative;
  float: left;
  width: percentage((@columns / @grid-columns));
  min-height: 1px;
  padding-left:  (@gutter / 2);
  padding-right: (@gutter / 2);
}

// offsets xs
.make-xs-column-offset (@columns) {

  margin-left: percentage((@columns / @grid-columns));
}

// push xs
.make-xs-column-push (@columns) {

  left: percentage((@columns / @grid-columns));
}

// pulls xs
.make-xs-column-pull (@columns) {

  right: percentage((@columns / @grid-columns));
}

// SM
.make-sm-column (@columns; @gutter: @grid-gutter-width) {

  position: relative;
  min-height: 1px;
  padding-left:  (@gutter / 2);
  padding-right: (@gutter / 2);

  @media (min-width: @screen-sm-min) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}

// offset sm
.make-sm-column-offset (@columns) {

  @media (min-width: @screen-sm-min) {
    margin-left: percentage((@columns / @grid-columns));
  }
}

// push sm
.make-sm-column-push (@columns) {

  @media (min-width: @screen-sm-min) {
    left: percentage((@columns / @grid-columns));
  }
}

// pull sm
.make-sm-column-pull (@columns) {

  @media (min-width: @screen-sm-min) {
    right: percentage((@columns / @grid-columns));
  }
}

// MD
.make-md-column (@columns; @gutter: @grid-gutter-width) {

  position: relative;
  min-height: 1px;
  padding-left:  (@gutter / 2);
  padding-right: (@gutter / 2);

  @media (min-width: @screen-md-min) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}

// offset md
.make-md-column-offset (@columns) {

  @media (min-width: @screen-md-min) {
    margin-left: percentage((@columns / @grid-columns));
  }
}

// push md
.make-md-column-push (@columns) {

  @media (min-width: @screen-md-min) {
    left: percentage((@columns / @grid-columns));
  }
}

// pull md
.make-md-column-pull (@columns) {

  @media (min-width: @screen-md-min) {
    right: percentage((@columns / @grid-columns));
  }
}

// LG
.make-lg-column (@columns; @gutter: @grid-gutter-width) {

  position: relative;
  min-height: 1px;
  padding-left:  (@gutter / 2);
  padding-right: (@gutter / 2);

  @media (min-width: @screen-lg-min) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}

// offset lg
.make-lg-column-offset (@columns) {

  @media (min-width: @screen-lg-min) {
    margin-left: percentage((@columns / @grid-columns));
  }
}

// push lg
.make-lg-column-push (@columns) {

  @media (min-width: @screen-lg-min) {
    left: percentage((@columns / @grid-columns));
  }
}

//pull lg
.make-lg-column-pull (@columns) {

  @media (min-width: @screen-lg-min) {
    right: percentage((@columns / @grid-columns));
  }
}